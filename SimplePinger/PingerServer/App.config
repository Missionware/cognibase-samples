<?xml version="1.0" encoding="utf-8"?>

<configuration>

	<!-- Here we define the COGNIBASE configuration section  -->
	<configSections>
		<section name="ServerSetup" type="COGNIBASE" />
	</configSections>

	<!-- Here we set various settings for the process (both COGNIBASE defined and custom application ones) -->
	<appSettings>
		<!-- COGNIBASE Setting: Output/Console Logging Level { Paranoiac, Trace, Debug, Error, Warning, Info, Any, None } -->
		<add key="Log To Output Level" value="Debug" />

		<!-- COGNIBASE Setting: File Logging Level { Paranoiac, Trace, Debug, Error, Warning, Info, Any, None } -->
		<!--<add key="Log To File Level" value="Trace"/>-->

		<!-- COGNIBASE Setting: SecurityImmutableAccountsMode { None, Registered, Configured, OSDefined, All } -->
		<add key="Security Immutable Accounts Mode" value="Configured" />

		<!-- Custom Setting: Set to true to create test data (set it to true on second run of the server).
		     Then set it back to false. -->
		<add key="Create Test Data On Init" value="false" />

	</appSettings>
		<ServerSetup>
			<!-- Defined the security accounts. Here we define that the security accounts are coming from the
	     Operating System. -->
			<IdentityStoreSetup Name="Pinger" availableversion="1">
				<!-- Here we define the "Configured" Accounts. The data are stored in the DB only. -->
				<ConfiguredAccounts domainid="TestDev" domainfullname="TestDev">
					<Role name="admins" memberusers="user1" />
					<User name="user1" password="user1" />
				</ConfiguredAccounts>
			</IdentityStoreSetup>

			<DataStoresSetup>
				<DataStore PersistenceMgrType="OODB"
				           SqlEngineType="SQLITE"
				           ConnectionStr="database">

					<!-- This is the configuration for the data store of internal Cognibase domain named Missionware.Cognibase.Domain.-->
					<Missionware.Cognibase.AppManagement.Domain />

					<!-- This is the configuration for the data store of internal identiy domain named Missionware.Cognibase.Security.Identity.Domain  -->
					<Missionware.Cognibase.Security.Identity.Domain />

					<!-- This is the configuration for the data store of the actual Pinger Domain named PingerDomain -->
					<PingerDomain Mandatory="true" />
				</DataStore>
			</DataStoresSetup>


			<!-- Here we set the settings for the communication method. Each library may have more than one protocols. 
	     For example "Streaming" library contains the NamedPipes (pipe) and the Web Socket (ws) implementation -->
			<CommunicationSetup>
				<server>
					<!-- Here we define in which protocols does the Server Object Manager listens for new connections from clients -->
					<agent library="streaming" protocol="ws" />
					<agent library="streaming" protocol="pipe" />
				</server>

			</CommunicationSetup>
		</ServerSetup>
</configuration>